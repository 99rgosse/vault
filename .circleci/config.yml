version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: 861abee11db957049846aebf66fba27afe0ff2c6
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: 861abee11db957049846aebf66fba27afe0ff2c6
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_f49c_{{checksum ".buildcache/cache-keys/copy-source-f49cce6acaba0ad2a431d8b3773a5c9bceff462b"}}
          keys:
            - go-modules_b46a_{{checksum ".buildcache/cache-keys/go-modules-b46a16e3e288e060c137a6b575c3d4076b8858d2"}}
            - build-static-assets_10fc_{{checksum ".buildcache/cache-keys/build-static-assets-10fc1249063de7bd9a8a6152020abbf7b4f10be9"}}
            - build-ui_26f5_{{checksum ".buildcache/cache-keys/build-ui-26f5264dcd97eb09701528b3a7e55c2b319384ce"}}
            - ui-dependencies_1b62_{{checksum ".buildcache/cache-keys/ui-dependencies-1b62521b37dfa9993be3ff98c16705b16a4e0c17"}}
            - install-yarn_8416_{{checksum ".buildcache/cache-keys/install-yarn-841661371841438326b045be1fbefa82cef8e90c"}}
            - set-workdir_b283_{{checksum ".buildcache/cache-keys/set-workdir-b283f2d1b935f6393c81b9212febb9d46fe06ddc"}}
            - install-go-tools_92f8_{{checksum ".buildcache/cache-keys/install-go-tools-92f8ab040fee3f3939d07b7bd4d4d6626892b8ec"}}
            - install-go_513f_{{checksum ".buildcache/cache-keys/install-go-513f2a338cda5459ba6af9c19726ca6a5e5f77d8"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=09-copy-source-f49cce6acaba0ad2a431d8b3773a5c9bceff462b make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-c6cdf1b224722d2520e082320f2a71875913247c-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-install-go-513f2a338cda5459ba6af9c19726ca6a5e5f77d8-image
          name: Build install-go layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-install-go-tools-92f8ab040fee3f3939d07b7bd4d4d6626892b8ec-image
          name: Build install-go-tools layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-set-workdir-b283f2d1b935f6393c81b9212febb9d46fe06ddc-image
          name: Build set-workdir layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 04-install-yarn-841661371841438326b045be1fbefa82cef8e90c-image
          name: Build install-yarn layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 05-ui-dependencies-1b62521b37dfa9993be3ff98c16705b16a4e0c17-image
          name: Build ui-dependencies layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-26f5264dcd97eb09701528b3a7e55c2b319384ce-image
          name: Build build-ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 07-build-static-assets-10fc1249063de7bd9a8a6152020abbf7b4f10be9-image
          name: Build build-static-assets layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 08-go-modules-b46a16e3e288e060c137a6b575c3d4076b8858d2-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 09-copy-source-f49cce6acaba0ad2a431d8b3773a5c9bceff462b-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 09-copy-source-f49cce6acaba0ad2a431d8b3773a5c9bceff462b-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/09-copy-source-f49cce6acaba0ad2a431d8b3773a5c9bceff462b.tar.gz
          key: copy-source_f49c_{{checksum ".buildcache/cache-keys/copy-source-f49cce6acaba0ad2a431d8b3773a5c9bceff462b"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-67d5536dc98eb42197a8d3484afc10faedf3239e-{{checksum ".buildcache/cache-keys/package-67d5536dc98eb42197a8d3484afc10faedf3239e"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-861abee11db957049846aebf66fba27afe0ff2c6-c5d50b5178af1bf2.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-861abee11db957049846aebf66fba27afe0ff2c6-c5d50b5178af1bf2.tar.gz .buildcache/packages lockfile-861abee11db957049846aebf66fba27afe0ff2c6-c5d50b5178af1bf2.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-861abee11db957049846aebf66fba27afe0ff2c6-c5d50b5178af1bf2.tar.gz .buildcache/packages/store/*.json lockfile-861abee11db957049846aebf66fba27afe0ff2c6-c5d50b5178af1bf2.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-861abee11db957049846aebf66fba27afe0ff2c6-c5d50b5178af1bf2.yml
      - store_artifacts:
          path: packages-861abee11db957049846aebf66fba27afe0ff2c6-c5d50b5178af1bf2.tar.gz
      - store_artifacts:
          path: meta-861abee11db957049846aebf66fba27afe0ff2c6-c5d50b5178af1bf2.tar.gz
      - run:
          command: mv ".buildcache/packages" "packages-861abee11db957049846aebf66fba27afe0ff2c6-c5d50b5178af1bf2"
          name: Update Custom Build Paths
      - store_artifacts:
          path: packages-861abee11db957049846aebf66fba27afe0ff2c6-c5d50b5178af1bf2
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-67d5536dc98eb42197a8d3484afc10faedf3239e-{{checksum ".buildcache/cache-keys/package-67d5536dc98eb42197a8d3484afc10faedf3239e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_f49c_{{checksum ".buildcache/cache-keys/copy-source-f49cce6acaba0ad2a431d8b3773a5c9bceff462b"}}
          keys:
            - go-modules_b46a_{{checksum ".buildcache/cache-keys/go-modules-b46a16e3e288e060c137a6b575c3d4076b8858d2"}}
            - build-static-assets_10fc_{{checksum ".buildcache/cache-keys/build-static-assets-10fc1249063de7bd9a8a6152020abbf7b4f10be9"}}
            - build-ui_26f5_{{checksum ".buildcache/cache-keys/build-ui-26f5264dcd97eb09701528b3a7e55c2b319384ce"}}
            - ui-dependencies_1b62_{{checksum ".buildcache/cache-keys/ui-dependencies-1b62521b37dfa9993be3ff98c16705b16a4e0c17"}}
            - install-yarn_8416_{{checksum ".buildcache/cache-keys/install-yarn-841661371841438326b045be1fbefa82cef8e90c"}}
            - set-workdir_b283_{{checksum ".buildcache/cache-keys/set-workdir-b283f2d1b935f6393c81b9212febb9d46fe06ddc"}}
            - install-go-tools_92f8_{{checksum ".buildcache/cache-keys/install-go-tools-92f8ab040fee3f3939d07b7bd4d4d6626892b8ec"}}
            - install-go_513f_{{checksum ".buildcache/cache-keys/install-go-513f2a338cda5459ba6af9c19726ca6a5e5f77d8"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-67d5536dc98eb42197a8d3484afc10faedf3239e-{{checksum ".buildcache/cache-keys/package-67d5536dc98eb42197a8d3484afc10faedf3239e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 67d5536dc98eb42197a8d3484afc10faedf3239e
workflows:
  build-861abee11db957049846aebf66fba27afe0ff2c6-c5d50b5178af1bf2:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
