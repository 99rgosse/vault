version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: 861abee11db957049846aebf66fba27afe0ff2c6
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: 861abee11db957049846aebf66fba27afe0ff2c6
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: ui-dependencies_eb1b_{{checksum ".buildcache/cache-keys/ui-dependencies-eb1bff3a8a4ed97aef1e99c594b616da9f2de6f6"}}
          keys:
            - make-ui-folder_ecfd_{{checksum ".buildcache/cache-keys/make-ui-folder-ecfd4315a398276c29eb15fa0b3f36e5bd9a30c5"}}
            - install-yarn_9f11_{{checksum ".buildcache/cache-keys/install-yarn-9f110a2979fbd0dc375c1becf68a9801978895f9"}}
            - set-workdir_74c4_{{checksum ".buildcache/cache-keys/set-workdir-74c461ee3a5be172c9e8ea7cabe1a2432e773a11"}}
            - install-go-tools_296d_{{checksum ".buildcache/cache-keys/install-go-tools-296d5f79732a9d8ef4a1a59cb6cdbd30ac6f3f1a"}}
            - install-go_d3cf_{{checksum ".buildcache/cache-keys/install-go-d3cfbf34edb1074513e0377a86595f5e740cd03b"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Layer Cache: ui-dependencies'
      - run:
          command: LAYER_SPEC_ID=06-ui-dependencies-eb1bff3a8a4ed97aef1e99c594b616da9f2de6f6 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-c6cdf1b224722d2520e082320f2a71875913247c-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-install-go-d3cfbf34edb1074513e0377a86595f5e740cd03b-image
          name: Build install-go layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-install-go-tools-296d5f79732a9d8ef4a1a59cb6cdbd30ac6f3f1a-image
          name: Build install-go-tools layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-set-workdir-74c461ee3a5be172c9e8ea7cabe1a2432e773a11-image
          name: Build set-workdir layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 04-install-yarn-9f110a2979fbd0dc375c1becf68a9801978895f9-image
          name: Build install-yarn layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 05-make-ui-folder-ecfd4315a398276c29eb15fa0b3f36e5bd9a30c5-image
          name: Build make-ui-folder layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-ui-dependencies-eb1bff3a8a4ed97aef1e99c594b616da9f2de6f6-image
          name: Build ui-dependencies layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-ui-dependencies-eb1bff3a8a4ed97aef1e99c594b616da9f2de6f6-save
          name: Build ui-dependencies layer
      - save_cache:
          paths:
            - .buildcache/archives/06-ui-dependencies-eb1bff3a8a4ed97aef1e99c594b616da9f2de6f6.tar.gz
          key: ui-dependencies_eb1b_{{checksum ".buildcache/cache-keys/ui-dependencies-eb1bff3a8a4ed97aef1e99c594b616da9f2de6f6"}}
          name: 'Save Layer Cache: ui-dependencies'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-5d92316a6d8cc5e68b52fafe4e65b6da282a08e2-{{checksum ".buildcache/cache-keys/package-5d92316a6d8cc5e68b52fafe4e65b6da282a08e2"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-861abee11db957049846aebf66fba27afe0ff2c6-d67a575e29ff1a0b.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-861abee11db957049846aebf66fba27afe0ff2c6-d67a575e29ff1a0b.tar.gz .buildcache/packages lockfile-861abee11db957049846aebf66fba27afe0ff2c6-d67a575e29ff1a0b.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-861abee11db957049846aebf66fba27afe0ff2c6-d67a575e29ff1a0b.tar.gz .buildcache/packages/store/*.json lockfile-861abee11db957049846aebf66fba27afe0ff2c6-d67a575e29ff1a0b.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-861abee11db957049846aebf66fba27afe0ff2c6-d67a575e29ff1a0b.yml
      - store_artifacts:
          path: packages-861abee11db957049846aebf66fba27afe0ff2c6-d67a575e29ff1a0b.tar.gz
      - store_artifacts:
          path: meta-861abee11db957049846aebf66fba27afe0ff2c6-d67a575e29ff1a0b.tar.gz
      - run:
          command: mv ".buildcache/packages" "packages-861abee11db957049846aebf66fba27afe0ff2c6-d67a575e29ff1a0b"
          name: Update Custom Build Paths
      - store_artifacts:
          path: packages-861abee11db957049846aebf66fba27afe0ff2c6-d67a575e29ff1a0b
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-5d92316a6d8cc5e68b52fafe4e65b6da282a08e2-{{checksum ".buildcache/cache-keys/package-5d92316a6d8cc5e68b52fafe4e65b6da282a08e2"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_f088_{{checksum ".buildcache/cache-keys/copy-source-f08876e17d04722a59c7915a09faf71c1426359b"}}
          keys:
            - warm-go-build-vendor-cache_0d1c_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-0d1c85fca0f39d67b2203b21f0aa73d01ed51787"}}
            - build-ui_b996_{{checksum ".buildcache/cache-keys/build-ui-b996512e806437efb2e3e12754a2bb710994e091"}}
            - ui-dependencies_eb1b_{{checksum ".buildcache/cache-keys/ui-dependencies-eb1bff3a8a4ed97aef1e99c594b616da9f2de6f6"}}
            - make-ui-folder_ecfd_{{checksum ".buildcache/cache-keys/make-ui-folder-ecfd4315a398276c29eb15fa0b3f36e5bd9a30c5"}}
            - install-yarn_9f11_{{checksum ".buildcache/cache-keys/install-yarn-9f110a2979fbd0dc375c1becf68a9801978895f9"}}
            - set-workdir_74c4_{{checksum ".buildcache/cache-keys/set-workdir-74c461ee3a5be172c9e8ea7cabe1a2432e773a11"}}
            - install-go-tools_296d_{{checksum ".buildcache/cache-keys/install-go-tools-296d5f79732a9d8ef4a1a59cb6cdbd30ac6f3f1a"}}
            - install-go_d3cf_{{checksum ".buildcache/cache-keys/install-go-d3cfbf34edb1074513e0377a86595f5e740cd03b"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-5d92316a6d8cc5e68b52fafe4e65b6da282a08e2-{{checksum ".buildcache/cache-keys/package-5d92316a6d8cc5e68b52fafe4e65b6da282a08e2"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 5d92316a6d8cc5e68b52fafe4e65b6da282a08e2
workflows:
  build-861abee11db957049846aebf66fba27afe0ff2c6-d67a575e29ff1a0b:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
