version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: 78242d16be46334cfe502bc7b76274f909339797
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: 78242d16be46334cfe502bc7b76274f909339797
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b668_{{checksum ".buildcache/cache-keys/copy-source-b668328bb8abfe59ab7c2fdc87a12851398205d4"}}
          keys:
            - go-modules_3ebf_{{checksum ".buildcache/cache-keys/go-modules-3ebf5318cd569e7cb74a02a29db01657fd9cb84d"}}
            - build-ui_e24e_{{checksum ".buildcache/cache-keys/build-ui-e24e20704e479126b43d8cd87e20e0bd417035bd"}}
            - ui-dependencies_b1fe_{{checksum ".buildcache/cache-keys/ui-dependencies-b1fedc1e35d52a00e566f3e794d006ec66941329"}}
            - make-ui-folder_99c9_{{checksum ".buildcache/cache-keys/make-ui-folder-99c91243495b8cb34b913fe204ccd0496b456fec"}}
            - install-yarn_3241_{{checksum ".buildcache/cache-keys/install-yarn-3241a17563f3af8379a63c52ae1d99c37cf4a848"}}
            - set-workdir_eaac_{{checksum ".buildcache/cache-keys/set-workdir-eaac312562ef27696f50c506254a113574055476"}}
            - install-go-tools_1b88_{{checksum ".buildcache/cache-keys/install-go-tools-1b88204454441cb85c9a985619687fe732397adb"}}
            - install-go_513f_{{checksum ".buildcache/cache-keys/install-go-513f2a338cda5459ba6af9c19726ca6a5e5f77d8"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=09-copy-source-b668328bb8abfe59ab7c2fdc87a12851398205d4 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-c6cdf1b224722d2520e082320f2a71875913247c-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-install-go-513f2a338cda5459ba6af9c19726ca6a5e5f77d8-image
          name: Build install-go layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-install-go-tools-1b88204454441cb85c9a985619687fe732397adb-image
          name: Build install-go-tools layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-set-workdir-eaac312562ef27696f50c506254a113574055476-image
          name: Build set-workdir layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 04-install-yarn-3241a17563f3af8379a63c52ae1d99c37cf4a848-image
          name: Build install-yarn layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 05-make-ui-folder-99c91243495b8cb34b913fe204ccd0496b456fec-image
          name: Build make-ui-folder layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-ui-dependencies-b1fedc1e35d52a00e566f3e794d006ec66941329-image
          name: Build ui-dependencies layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 07-build-ui-e24e20704e479126b43d8cd87e20e0bd417035bd-image
          name: Build build-ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 08-go-modules-3ebf5318cd569e7cb74a02a29db01657fd9cb84d-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 09-copy-source-b668328bb8abfe59ab7c2fdc87a12851398205d4-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 09-copy-source-b668328bb8abfe59ab7c2fdc87a12851398205d4-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/09-copy-source-b668328bb8abfe59ab7c2fdc87a12851398205d4.tar.gz
          key: copy-source_b668_{{checksum ".buildcache/cache-keys/copy-source-b668328bb8abfe59ab7c2fdc87a12851398205d4"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-244a1c07203a9a68fafdd8ff31dd0960eb45fb65-{{checksum ".buildcache/cache-keys/package-244a1c07203a9a68fafdd8ff31dd0960eb45fb65"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-78242d16be46334cfe502bc7b76274f909339797-d347149b5b89c207.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-78242d16be46334cfe502bc7b76274f909339797-d347149b5b89c207.tar.gz .buildcache/packages lockfile-78242d16be46334cfe502bc7b76274f909339797-d347149b5b89c207.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-78242d16be46334cfe502bc7b76274f909339797-d347149b5b89c207.tar.gz .buildcache/packages/store/*.json lockfile-78242d16be46334cfe502bc7b76274f909339797-d347149b5b89c207.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-78242d16be46334cfe502bc7b76274f909339797-d347149b5b89c207.yml
      - store_artifacts:
          path: packages-78242d16be46334cfe502bc7b76274f909339797-d347149b5b89c207.tar.gz
      - store_artifacts:
          path: meta-78242d16be46334cfe502bc7b76274f909339797-d347149b5b89c207.tar.gz
      - run:
          command: mv ".buildcache/packages" "packages-78242d16be46334cfe502bc7b76274f909339797-d347149b5b89c207"
          name: Update Custom Build Paths
      - store_artifacts:
          path: packages-78242d16be46334cfe502bc7b76274f909339797-d347149b5b89c207
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-244a1c07203a9a68fafdd8ff31dd0960eb45fb65-{{checksum ".buildcache/cache-keys/package-244a1c07203a9a68fafdd8ff31dd0960eb45fb65"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_b668_{{checksum ".buildcache/cache-keys/copy-source-b668328bb8abfe59ab7c2fdc87a12851398205d4"}}
          keys:
            - go-modules_3ebf_{{checksum ".buildcache/cache-keys/go-modules-3ebf5318cd569e7cb74a02a29db01657fd9cb84d"}}
            - build-ui_e24e_{{checksum ".buildcache/cache-keys/build-ui-e24e20704e479126b43d8cd87e20e0bd417035bd"}}
            - ui-dependencies_b1fe_{{checksum ".buildcache/cache-keys/ui-dependencies-b1fedc1e35d52a00e566f3e794d006ec66941329"}}
            - make-ui-folder_99c9_{{checksum ".buildcache/cache-keys/make-ui-folder-99c91243495b8cb34b913fe204ccd0496b456fec"}}
            - install-yarn_3241_{{checksum ".buildcache/cache-keys/install-yarn-3241a17563f3af8379a63c52ae1d99c37cf4a848"}}
            - set-workdir_eaac_{{checksum ".buildcache/cache-keys/set-workdir-eaac312562ef27696f50c506254a113574055476"}}
            - install-go-tools_1b88_{{checksum ".buildcache/cache-keys/install-go-tools-1b88204454441cb85c9a985619687fe732397adb"}}
            - install-go_513f_{{checksum ".buildcache/cache-keys/install-go-513f2a338cda5459ba6af9c19726ca6a5e5f77d8"}}
            - base_c6cd_{{checksum ".buildcache/cache-keys/base-c6cdf1b224722d2520e082320f2a71875913247c"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-244a1c07203a9a68fafdd8ff31dd0960eb45fb65-{{checksum ".buildcache/cache-keys/package-244a1c07203a9a68fafdd8ff31dd0960eb45fb65"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 244a1c07203a9a68fafdd8ff31dd0960eb45fb65
workflows:
  build-78242d16be46334cfe502bc7b76274f909339797-d347149b5b89c207:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
