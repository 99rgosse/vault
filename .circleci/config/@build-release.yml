version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: build-ui_7fda_{{checksum ".buildcache/cache-keys/build-ui-7fda199944edb2c45a3cd9c87839a8feaec468d1"}}
          keys:
            - ui-dependencies_4302_{{checksum ".buildcache/cache-keys/ui-dependencies-43027f1af9fde0305de9a1955f3ef95d28d03366"}}
            - install-yarn_cb2e_{{checksum ".buildcache/cache-keys/install-yarn-cb2ea6830bce7a47f91c1ff70c179af8ca6e6e2c"}}
            - set-workdir_3744_{{checksum ".buildcache/cache-keys/set-workdir-3744f034c08ea1cbbe80904649acc387be86b359"}}
            - install-go-tools_1005_{{checksum ".buildcache/cache-keys/install-go-tools-10057feb9ef291620871eca048285e9bdca5a2d4"}}
            - install-go_e64c_{{checksum ".buildcache/cache-keys/install-go-e64cde0f87f1945366c806507e43aa52a1663fbd"}}
            - base_dd9b_{{checksum ".buildcache/cache-keys/base-dd9bf623c387c085e076d2edb1ea0c66b490e43b"}}
          name: 'Restore Layer Cache: build-ui'
      - run:
          command: LAYER_SPEC_ID=06-build-ui-7fda199944edb2c45a3cd9c87839a8feaec468d1 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-dd9bf623c387c085e076d2edb1ea0c66b490e43b-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-install-go-e64cde0f87f1945366c806507e43aa52a1663fbd-image
          name: Build install-go layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-install-go-tools-10057feb9ef291620871eca048285e9bdca5a2d4-image
          name: Build install-go-tools layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-set-workdir-3744f034c08ea1cbbe80904649acc387be86b359-image
          name: Build set-workdir layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 04-install-yarn-cb2ea6830bce7a47f91c1ff70c179af8ca6e6e2c-image
          name: Build install-yarn layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 05-ui-dependencies-43027f1af9fde0305de9a1955f3ef95d28d03366-image
          name: Build ui-dependencies layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-7fda199944edb2c45a3cd9c87839a8feaec468d1-image
          name: Build build-ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-7fda199944edb2c45a3cd9c87839a8feaec468d1-save
          name: Build build-ui layer
      - save_cache:
          paths:
            - .buildcache/archives/06-build-ui-7fda199944edb2c45a3cd9c87839a8feaec468d1.tar.gz
          key: build-ui_7fda_{{checksum ".buildcache/cache-keys/build-ui-7fda199944edb2c45a3cd9c87839a8feaec468d1"}}
          name: 'Save Layer Cache: build-ui'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-71c77447b56d83f1956f66425d94004d5bd6e75c-{{checksum ".buildcache/cache-keys/package-71c77447b56d83f1956f66425d94004d5bd6e75c"}}
          name: Restore package cache
      - restore_cache:
          key: package-1a84dce18fbae6ef5d1d4263275f0b05d8699fbc-{{checksum ".buildcache/cache-keys/package-1a84dce18fbae6ef5d1d4263275f0b05d8699fbc"}}
          name: Restore package cache
      - restore_cache:
          key: package-4fc835b80d1472c607d1ec55edc38258f9209536-{{checksum ".buildcache/cache-keys/package-4fc835b80d1472c607d1ec55edc38258f9209536"}}
          name: Restore package cache
      - restore_cache:
          key: package-90d783918b7f5c4af4f7c45103cf32bed6d77754-{{checksum ".buildcache/cache-keys/package-90d783918b7f5c4af4f7c45103cf32bed6d77754"}}
          name: Restore package cache
      - restore_cache:
          key: package-c32dfad263fb9c86b416e53f6fe19e0410902de2-{{checksum ".buildcache/cache-keys/package-c32dfad263fb9c86b416e53f6fe19e0410902de2"}}
          name: Restore package cache
      - restore_cache:
          key: package-d35cda25b50b84199b3b0e42c2bf998d241e6918-{{checksum ".buildcache/cache-keys/package-d35cda25b50b84199b3b0e42c2bf998d241e6918"}}
          name: Restore package cache
      - restore_cache:
          key: package-6da73bd50e421d94277d666a395c52ddb7860cbe-{{checksum ".buildcache/cache-keys/package-6da73bd50e421d94277d666a395c52ddb7860cbe"}}
          name: Restore package cache
      - restore_cache:
          key: package-ad6ea8081c240d3e8a83e3afde1d15ddd5a6142f-{{checksum ".buildcache/cache-keys/package-ad6ea8081c240d3e8a83e3afde1d15ddd5a6142f"}}
          name: Restore package cache
      - restore_cache:
          key: package-95b51ed259721923fb8e55bcd596a9b441776fe0-{{checksum ".buildcache/cache-keys/package-95b51ed259721923fb8e55bcd596a9b441776fe0"}}
          name: Restore package cache
      - restore_cache:
          key: package-eb3a66bc7be49552350e32cb3eddbeaf941f0e63-{{checksum ".buildcache/cache-keys/package-eb3a66bc7be49552350e32cb3eddbeaf941f0e63"}}
          name: Restore package cache
      - restore_cache:
          key: package-67a57a586daec2b10459985fb253d777558d23d3-{{checksum ".buildcache/cache-keys/package-67a57a586daec2b10459985fb253d777558d23d3"}}
          name: Restore package cache
      - restore_cache:
          key: package-3045ef52344757e86fcb1ee8a1f2f49655d3221e-{{checksum ".buildcache/cache-keys/package-3045ef52344757e86fcb1ee8a1f2f49655d3221e"}}
          name: Restore package cache
      - restore_cache:
          key: package-665d14698579dc9a792c71fb0937b7b20e055e83-{{checksum ".buildcache/cache-keys/package-665d14698579dc9a792c71fb0937b7b20e055e83"}}
          name: Restore package cache
      - restore_cache:
          key: package-d85a0e79d3e3096edac07edc0634583cbe1ac8e4-{{checksum ".buildcache/cache-keys/package-d85a0e79d3e3096edac07edc0634583cbe1ac8e4"}}
          name: Restore package cache
      - restore_cache:
          key: package-a308e0bfd1b55d2febfba8dac5019cb6735ec3ac-{{checksum ".buildcache/cache-keys/package-a308e0bfd1b55d2febfba8dac5019cb6735ec3ac"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-531021fad7b142cf.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-531021fad7b142cf.tar.gz .buildcache/packages lockfile-531021fad7b142cf.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-531021fad7b142cf.tar.gz .buildcache/packages/store/*.json lockfile-531021fad7b142cf.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-531021fad7b142cf.yml
      - store_artifacts:
          path: packages-531021fad7b142cf.tar.gz
      - store_artifacts:
          path: meta-531021fad7b142cf.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-71c77447b56d83f1956f66425d94004d5bd6e75c-{{checksum ".buildcache/cache-keys/package-71c77447b56d83f1956f66425d94004d5bd6e75c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_494b_{{checksum ".buildcache/cache-keys/copy-source-494bad4b27503c9e23c43c1cefebc9d1b42a40f7"}}
          keys:
            - warm-go-build-vendor-cache_f697_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-f697c215275094579338c4e4baa92b116c53bd96"}}
            - build-static-assets_fe55_{{checksum ".buildcache/cache-keys/build-static-assets-fe555739fd4a116ccacd6bf8c8514270694f17ca"}}
            - build-ui_7fda_{{checksum ".buildcache/cache-keys/build-ui-7fda199944edb2c45a3cd9c87839a8feaec468d1"}}
            - ui-dependencies_4302_{{checksum ".buildcache/cache-keys/ui-dependencies-43027f1af9fde0305de9a1955f3ef95d28d03366"}}
            - install-yarn_cb2e_{{checksum ".buildcache/cache-keys/install-yarn-cb2ea6830bce7a47f91c1ff70c179af8ca6e6e2c"}}
            - set-workdir_3744_{{checksum ".buildcache/cache-keys/set-workdir-3744f034c08ea1cbbe80904649acc387be86b359"}}
            - install-go-tools_1005_{{checksum ".buildcache/cache-keys/install-go-tools-10057feb9ef291620871eca048285e9bdca5a2d4"}}
            - install-go_e64c_{{checksum ".buildcache/cache-keys/install-go-e64cde0f87f1945366c806507e43aa52a1663fbd"}}
            - base_dd9b_{{checksum ".buildcache/cache-keys/base-dd9bf623c387c085e076d2edb1ea0c66b490e43b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-71c77447b56d83f1956f66425d94004d5bd6e75c-{{checksum ".buildcache/cache-keys/package-71c77447b56d83f1956f66425d94004d5bd6e75c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 71c77447b56d83f1956f66425d94004d5bd6e75c
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1a84dce18fbae6ef5d1d4263275f0b05d8699fbc-{{checksum ".buildcache/cache-keys/package-1a84dce18fbae6ef5d1d4263275f0b05d8699fbc"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_494b_{{checksum ".buildcache/cache-keys/copy-source-494bad4b27503c9e23c43c1cefebc9d1b42a40f7"}}
          keys:
            - warm-go-build-vendor-cache_f697_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-f697c215275094579338c4e4baa92b116c53bd96"}}
            - build-static-assets_fe55_{{checksum ".buildcache/cache-keys/build-static-assets-fe555739fd4a116ccacd6bf8c8514270694f17ca"}}
            - build-ui_7fda_{{checksum ".buildcache/cache-keys/build-ui-7fda199944edb2c45a3cd9c87839a8feaec468d1"}}
            - ui-dependencies_4302_{{checksum ".buildcache/cache-keys/ui-dependencies-43027f1af9fde0305de9a1955f3ef95d28d03366"}}
            - install-yarn_cb2e_{{checksum ".buildcache/cache-keys/install-yarn-cb2ea6830bce7a47f91c1ff70c179af8ca6e6e2c"}}
            - set-workdir_3744_{{checksum ".buildcache/cache-keys/set-workdir-3744f034c08ea1cbbe80904649acc387be86b359"}}
            - install-go-tools_1005_{{checksum ".buildcache/cache-keys/install-go-tools-10057feb9ef291620871eca048285e9bdca5a2d4"}}
            - install-go_e64c_{{checksum ".buildcache/cache-keys/install-go-e64cde0f87f1945366c806507e43aa52a1663fbd"}}
            - base_dd9b_{{checksum ".buildcache/cache-keys/base-dd9bf623c387c085e076d2edb1ea0c66b490e43b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1a84dce18fbae6ef5d1d4263275f0b05d8699fbc-{{checksum ".buildcache/cache-keys/package-1a84dce18fbae6ef5d1d4263275f0b05d8699fbc"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1a84dce18fbae6ef5d1d4263275f0b05d8699fbc
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-4fc835b80d1472c607d1ec55edc38258f9209536-{{checksum ".buildcache/cache-keys/package-4fc835b80d1472c607d1ec55edc38258f9209536"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_494b_{{checksum ".buildcache/cache-keys/copy-source-494bad4b27503c9e23c43c1cefebc9d1b42a40f7"}}
          keys:
            - warm-go-build-vendor-cache_f697_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-f697c215275094579338c4e4baa92b116c53bd96"}}
            - build-static-assets_fe55_{{checksum ".buildcache/cache-keys/build-static-assets-fe555739fd4a116ccacd6bf8c8514270694f17ca"}}
            - build-ui_7fda_{{checksum ".buildcache/cache-keys/build-ui-7fda199944edb2c45a3cd9c87839a8feaec468d1"}}
            - ui-dependencies_4302_{{checksum ".buildcache/cache-keys/ui-dependencies-43027f1af9fde0305de9a1955f3ef95d28d03366"}}
            - install-yarn_cb2e_{{checksum ".buildcache/cache-keys/install-yarn-cb2ea6830bce7a47f91c1ff70c179af8ca6e6e2c"}}
            - set-workdir_3744_{{checksum ".buildcache/cache-keys/set-workdir-3744f034c08ea1cbbe80904649acc387be86b359"}}
            - install-go-tools_1005_{{checksum ".buildcache/cache-keys/install-go-tools-10057feb9ef291620871eca048285e9bdca5a2d4"}}
            - install-go_e64c_{{checksum ".buildcache/cache-keys/install-go-e64cde0f87f1945366c806507e43aa52a1663fbd"}}
            - base_dd9b_{{checksum ".buildcache/cache-keys/base-dd9bf623c387c085e076d2edb1ea0c66b490e43b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-4fc835b80d1472c607d1ec55edc38258f9209536-{{checksum ".buildcache/cache-keys/package-4fc835b80d1472c607d1ec55edc38258f9209536"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 4fc835b80d1472c607d1ec55edc38258f9209536
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-90d783918b7f5c4af4f7c45103cf32bed6d77754-{{checksum ".buildcache/cache-keys/package-90d783918b7f5c4af4f7c45103cf32bed6d77754"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_494b_{{checksum ".buildcache/cache-keys/copy-source-494bad4b27503c9e23c43c1cefebc9d1b42a40f7"}}
          keys:
            - warm-go-build-vendor-cache_f697_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-f697c215275094579338c4e4baa92b116c53bd96"}}
            - build-static-assets_fe55_{{checksum ".buildcache/cache-keys/build-static-assets-fe555739fd4a116ccacd6bf8c8514270694f17ca"}}
            - build-ui_7fda_{{checksum ".buildcache/cache-keys/build-ui-7fda199944edb2c45a3cd9c87839a8feaec468d1"}}
            - ui-dependencies_4302_{{checksum ".buildcache/cache-keys/ui-dependencies-43027f1af9fde0305de9a1955f3ef95d28d03366"}}
            - install-yarn_cb2e_{{checksum ".buildcache/cache-keys/install-yarn-cb2ea6830bce7a47f91c1ff70c179af8ca6e6e2c"}}
            - set-workdir_3744_{{checksum ".buildcache/cache-keys/set-workdir-3744f034c08ea1cbbe80904649acc387be86b359"}}
            - install-go-tools_1005_{{checksum ".buildcache/cache-keys/install-go-tools-10057feb9ef291620871eca048285e9bdca5a2d4"}}
            - install-go_e64c_{{checksum ".buildcache/cache-keys/install-go-e64cde0f87f1945366c806507e43aa52a1663fbd"}}
            - base_dd9b_{{checksum ".buildcache/cache-keys/base-dd9bf623c387c085e076d2edb1ea0c66b490e43b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-90d783918b7f5c4af4f7c45103cf32bed6d77754-{{checksum ".buildcache/cache-keys/package-90d783918b7f5c4af4f7c45103cf32bed6d77754"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 90d783918b7f5c4af4f7c45103cf32bed6d77754
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-c32dfad263fb9c86b416e53f6fe19e0410902de2-{{checksum ".buildcache/cache-keys/package-c32dfad263fb9c86b416e53f6fe19e0410902de2"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_494b_{{checksum ".buildcache/cache-keys/copy-source-494bad4b27503c9e23c43c1cefebc9d1b42a40f7"}}
          keys:
            - warm-go-build-vendor-cache_f697_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-f697c215275094579338c4e4baa92b116c53bd96"}}
            - build-static-assets_fe55_{{checksum ".buildcache/cache-keys/build-static-assets-fe555739fd4a116ccacd6bf8c8514270694f17ca"}}
            - build-ui_7fda_{{checksum ".buildcache/cache-keys/build-ui-7fda199944edb2c45a3cd9c87839a8feaec468d1"}}
            - ui-dependencies_4302_{{checksum ".buildcache/cache-keys/ui-dependencies-43027f1af9fde0305de9a1955f3ef95d28d03366"}}
            - install-yarn_cb2e_{{checksum ".buildcache/cache-keys/install-yarn-cb2ea6830bce7a47f91c1ff70c179af8ca6e6e2c"}}
            - set-workdir_3744_{{checksum ".buildcache/cache-keys/set-workdir-3744f034c08ea1cbbe80904649acc387be86b359"}}
            - install-go-tools_1005_{{checksum ".buildcache/cache-keys/install-go-tools-10057feb9ef291620871eca048285e9bdca5a2d4"}}
            - install-go_e64c_{{checksum ".buildcache/cache-keys/install-go-e64cde0f87f1945366c806507e43aa52a1663fbd"}}
            - base_dd9b_{{checksum ".buildcache/cache-keys/base-dd9bf623c387c085e076d2edb1ea0c66b490e43b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-c32dfad263fb9c86b416e53f6fe19e0410902de2-{{checksum ".buildcache/cache-keys/package-c32dfad263fb9c86b416e53f6fe19e0410902de2"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: c32dfad263fb9c86b416e53f6fe19e0410902de2
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d35cda25b50b84199b3b0e42c2bf998d241e6918-{{checksum ".buildcache/cache-keys/package-d35cda25b50b84199b3b0e42c2bf998d241e6918"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_494b_{{checksum ".buildcache/cache-keys/copy-source-494bad4b27503c9e23c43c1cefebc9d1b42a40f7"}}
          keys:
            - warm-go-build-vendor-cache_f697_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-f697c215275094579338c4e4baa92b116c53bd96"}}
            - build-static-assets_fe55_{{checksum ".buildcache/cache-keys/build-static-assets-fe555739fd4a116ccacd6bf8c8514270694f17ca"}}
            - build-ui_7fda_{{checksum ".buildcache/cache-keys/build-ui-7fda199944edb2c45a3cd9c87839a8feaec468d1"}}
            - ui-dependencies_4302_{{checksum ".buildcache/cache-keys/ui-dependencies-43027f1af9fde0305de9a1955f3ef95d28d03366"}}
            - install-yarn_cb2e_{{checksum ".buildcache/cache-keys/install-yarn-cb2ea6830bce7a47f91c1ff70c179af8ca6e6e2c"}}
            - set-workdir_3744_{{checksum ".buildcache/cache-keys/set-workdir-3744f034c08ea1cbbe80904649acc387be86b359"}}
            - install-go-tools_1005_{{checksum ".buildcache/cache-keys/install-go-tools-10057feb9ef291620871eca048285e9bdca5a2d4"}}
            - install-go_e64c_{{checksum ".buildcache/cache-keys/install-go-e64cde0f87f1945366c806507e43aa52a1663fbd"}}
            - base_dd9b_{{checksum ".buildcache/cache-keys/base-dd9bf623c387c085e076d2edb1ea0c66b490e43b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d35cda25b50b84199b3b0e42c2bf998d241e6918-{{checksum ".buildcache/cache-keys/package-d35cda25b50b84199b3b0e42c2bf998d241e6918"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d35cda25b50b84199b3b0e42c2bf998d241e6918
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-6da73bd50e421d94277d666a395c52ddb7860cbe-{{checksum ".buildcache/cache-keys/package-6da73bd50e421d94277d666a395c52ddb7860cbe"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_494b_{{checksum ".buildcache/cache-keys/copy-source-494bad4b27503c9e23c43c1cefebc9d1b42a40f7"}}
          keys:
            - warm-go-build-vendor-cache_f697_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-f697c215275094579338c4e4baa92b116c53bd96"}}
            - build-static-assets_fe55_{{checksum ".buildcache/cache-keys/build-static-assets-fe555739fd4a116ccacd6bf8c8514270694f17ca"}}
            - build-ui_7fda_{{checksum ".buildcache/cache-keys/build-ui-7fda199944edb2c45a3cd9c87839a8feaec468d1"}}
            - ui-dependencies_4302_{{checksum ".buildcache/cache-keys/ui-dependencies-43027f1af9fde0305de9a1955f3ef95d28d03366"}}
            - install-yarn_cb2e_{{checksum ".buildcache/cache-keys/install-yarn-cb2ea6830bce7a47f91c1ff70c179af8ca6e6e2c"}}
            - set-workdir_3744_{{checksum ".buildcache/cache-keys/set-workdir-3744f034c08ea1cbbe80904649acc387be86b359"}}
            - install-go-tools_1005_{{checksum ".buildcache/cache-keys/install-go-tools-10057feb9ef291620871eca048285e9bdca5a2d4"}}
            - install-go_e64c_{{checksum ".buildcache/cache-keys/install-go-e64cde0f87f1945366c806507e43aa52a1663fbd"}}
            - base_dd9b_{{checksum ".buildcache/cache-keys/base-dd9bf623c387c085e076d2edb1ea0c66b490e43b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-6da73bd50e421d94277d666a395c52ddb7860cbe-{{checksum ".buildcache/cache-keys/package-6da73bd50e421d94277d666a395c52ddb7860cbe"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 6da73bd50e421d94277d666a395c52ddb7860cbe
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-ad6ea8081c240d3e8a83e3afde1d15ddd5a6142f-{{checksum ".buildcache/cache-keys/package-ad6ea8081c240d3e8a83e3afde1d15ddd5a6142f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_494b_{{checksum ".buildcache/cache-keys/copy-source-494bad4b27503c9e23c43c1cefebc9d1b42a40f7"}}
          keys:
            - warm-go-build-vendor-cache_f697_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-f697c215275094579338c4e4baa92b116c53bd96"}}
            - build-static-assets_fe55_{{checksum ".buildcache/cache-keys/build-static-assets-fe555739fd4a116ccacd6bf8c8514270694f17ca"}}
            - build-ui_7fda_{{checksum ".buildcache/cache-keys/build-ui-7fda199944edb2c45a3cd9c87839a8feaec468d1"}}
            - ui-dependencies_4302_{{checksum ".buildcache/cache-keys/ui-dependencies-43027f1af9fde0305de9a1955f3ef95d28d03366"}}
            - install-yarn_cb2e_{{checksum ".buildcache/cache-keys/install-yarn-cb2ea6830bce7a47f91c1ff70c179af8ca6e6e2c"}}
            - set-workdir_3744_{{checksum ".buildcache/cache-keys/set-workdir-3744f034c08ea1cbbe80904649acc387be86b359"}}
            - install-go-tools_1005_{{checksum ".buildcache/cache-keys/install-go-tools-10057feb9ef291620871eca048285e9bdca5a2d4"}}
            - install-go_e64c_{{checksum ".buildcache/cache-keys/install-go-e64cde0f87f1945366c806507e43aa52a1663fbd"}}
            - base_dd9b_{{checksum ".buildcache/cache-keys/base-dd9bf623c387c085e076d2edb1ea0c66b490e43b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-ad6ea8081c240d3e8a83e3afde1d15ddd5a6142f-{{checksum ".buildcache/cache-keys/package-ad6ea8081c240d3e8a83e3afde1d15ddd5a6142f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: ad6ea8081c240d3e8a83e3afde1d15ddd5a6142f
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-95b51ed259721923fb8e55bcd596a9b441776fe0-{{checksum ".buildcache/cache-keys/package-95b51ed259721923fb8e55bcd596a9b441776fe0"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_494b_{{checksum ".buildcache/cache-keys/copy-source-494bad4b27503c9e23c43c1cefebc9d1b42a40f7"}}
          keys:
            - warm-go-build-vendor-cache_f697_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-f697c215275094579338c4e4baa92b116c53bd96"}}
            - build-static-assets_fe55_{{checksum ".buildcache/cache-keys/build-static-assets-fe555739fd4a116ccacd6bf8c8514270694f17ca"}}
            - build-ui_7fda_{{checksum ".buildcache/cache-keys/build-ui-7fda199944edb2c45a3cd9c87839a8feaec468d1"}}
            - ui-dependencies_4302_{{checksum ".buildcache/cache-keys/ui-dependencies-43027f1af9fde0305de9a1955f3ef95d28d03366"}}
            - install-yarn_cb2e_{{checksum ".buildcache/cache-keys/install-yarn-cb2ea6830bce7a47f91c1ff70c179af8ca6e6e2c"}}
            - set-workdir_3744_{{checksum ".buildcache/cache-keys/set-workdir-3744f034c08ea1cbbe80904649acc387be86b359"}}
            - install-go-tools_1005_{{checksum ".buildcache/cache-keys/install-go-tools-10057feb9ef291620871eca048285e9bdca5a2d4"}}
            - install-go_e64c_{{checksum ".buildcache/cache-keys/install-go-e64cde0f87f1945366c806507e43aa52a1663fbd"}}
            - base_dd9b_{{checksum ".buildcache/cache-keys/base-dd9bf623c387c085e076d2edb1ea0c66b490e43b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-95b51ed259721923fb8e55bcd596a9b441776fe0-{{checksum ".buildcache/cache-keys/package-95b51ed259721923fb8e55bcd596a9b441776fe0"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 95b51ed259721923fb8e55bcd596a9b441776fe0
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-eb3a66bc7be49552350e32cb3eddbeaf941f0e63-{{checksum ".buildcache/cache-keys/package-eb3a66bc7be49552350e32cb3eddbeaf941f0e63"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_494b_{{checksum ".buildcache/cache-keys/copy-source-494bad4b27503c9e23c43c1cefebc9d1b42a40f7"}}
          keys:
            - warm-go-build-vendor-cache_f697_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-f697c215275094579338c4e4baa92b116c53bd96"}}
            - build-static-assets_fe55_{{checksum ".buildcache/cache-keys/build-static-assets-fe555739fd4a116ccacd6bf8c8514270694f17ca"}}
            - build-ui_7fda_{{checksum ".buildcache/cache-keys/build-ui-7fda199944edb2c45a3cd9c87839a8feaec468d1"}}
            - ui-dependencies_4302_{{checksum ".buildcache/cache-keys/ui-dependencies-43027f1af9fde0305de9a1955f3ef95d28d03366"}}
            - install-yarn_cb2e_{{checksum ".buildcache/cache-keys/install-yarn-cb2ea6830bce7a47f91c1ff70c179af8ca6e6e2c"}}
            - set-workdir_3744_{{checksum ".buildcache/cache-keys/set-workdir-3744f034c08ea1cbbe80904649acc387be86b359"}}
            - install-go-tools_1005_{{checksum ".buildcache/cache-keys/install-go-tools-10057feb9ef291620871eca048285e9bdca5a2d4"}}
            - install-go_e64c_{{checksum ".buildcache/cache-keys/install-go-e64cde0f87f1945366c806507e43aa52a1663fbd"}}
            - base_dd9b_{{checksum ".buildcache/cache-keys/base-dd9bf623c387c085e076d2edb1ea0c66b490e43b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-eb3a66bc7be49552350e32cb3eddbeaf941f0e63-{{checksum ".buildcache/cache-keys/package-eb3a66bc7be49552350e32cb3eddbeaf941f0e63"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: eb3a66bc7be49552350e32cb3eddbeaf941f0e63
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-67a57a586daec2b10459985fb253d777558d23d3-{{checksum ".buildcache/cache-keys/package-67a57a586daec2b10459985fb253d777558d23d3"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_494b_{{checksum ".buildcache/cache-keys/copy-source-494bad4b27503c9e23c43c1cefebc9d1b42a40f7"}}
          keys:
            - warm-go-build-vendor-cache_f697_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-f697c215275094579338c4e4baa92b116c53bd96"}}
            - build-static-assets_fe55_{{checksum ".buildcache/cache-keys/build-static-assets-fe555739fd4a116ccacd6bf8c8514270694f17ca"}}
            - build-ui_7fda_{{checksum ".buildcache/cache-keys/build-ui-7fda199944edb2c45a3cd9c87839a8feaec468d1"}}
            - ui-dependencies_4302_{{checksum ".buildcache/cache-keys/ui-dependencies-43027f1af9fde0305de9a1955f3ef95d28d03366"}}
            - install-yarn_cb2e_{{checksum ".buildcache/cache-keys/install-yarn-cb2ea6830bce7a47f91c1ff70c179af8ca6e6e2c"}}
            - set-workdir_3744_{{checksum ".buildcache/cache-keys/set-workdir-3744f034c08ea1cbbe80904649acc387be86b359"}}
            - install-go-tools_1005_{{checksum ".buildcache/cache-keys/install-go-tools-10057feb9ef291620871eca048285e9bdca5a2d4"}}
            - install-go_e64c_{{checksum ".buildcache/cache-keys/install-go-e64cde0f87f1945366c806507e43aa52a1663fbd"}}
            - base_dd9b_{{checksum ".buildcache/cache-keys/base-dd9bf623c387c085e076d2edb1ea0c66b490e43b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-67a57a586daec2b10459985fb253d777558d23d3-{{checksum ".buildcache/cache-keys/package-67a57a586daec2b10459985fb253d777558d23d3"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 67a57a586daec2b10459985fb253d777558d23d3
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-3045ef52344757e86fcb1ee8a1f2f49655d3221e-{{checksum ".buildcache/cache-keys/package-3045ef52344757e86fcb1ee8a1f2f49655d3221e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_494b_{{checksum ".buildcache/cache-keys/copy-source-494bad4b27503c9e23c43c1cefebc9d1b42a40f7"}}
          keys:
            - warm-go-build-vendor-cache_f697_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-f697c215275094579338c4e4baa92b116c53bd96"}}
            - build-static-assets_fe55_{{checksum ".buildcache/cache-keys/build-static-assets-fe555739fd4a116ccacd6bf8c8514270694f17ca"}}
            - build-ui_7fda_{{checksum ".buildcache/cache-keys/build-ui-7fda199944edb2c45a3cd9c87839a8feaec468d1"}}
            - ui-dependencies_4302_{{checksum ".buildcache/cache-keys/ui-dependencies-43027f1af9fde0305de9a1955f3ef95d28d03366"}}
            - install-yarn_cb2e_{{checksum ".buildcache/cache-keys/install-yarn-cb2ea6830bce7a47f91c1ff70c179af8ca6e6e2c"}}
            - set-workdir_3744_{{checksum ".buildcache/cache-keys/set-workdir-3744f034c08ea1cbbe80904649acc387be86b359"}}
            - install-go-tools_1005_{{checksum ".buildcache/cache-keys/install-go-tools-10057feb9ef291620871eca048285e9bdca5a2d4"}}
            - install-go_e64c_{{checksum ".buildcache/cache-keys/install-go-e64cde0f87f1945366c806507e43aa52a1663fbd"}}
            - base_dd9b_{{checksum ".buildcache/cache-keys/base-dd9bf623c387c085e076d2edb1ea0c66b490e43b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-3045ef52344757e86fcb1ee8a1f2f49655d3221e-{{checksum ".buildcache/cache-keys/package-3045ef52344757e86fcb1ee8a1f2f49655d3221e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 3045ef52344757e86fcb1ee8a1f2f49655d3221e
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-665d14698579dc9a792c71fb0937b7b20e055e83-{{checksum ".buildcache/cache-keys/package-665d14698579dc9a792c71fb0937b7b20e055e83"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_494b_{{checksum ".buildcache/cache-keys/copy-source-494bad4b27503c9e23c43c1cefebc9d1b42a40f7"}}
          keys:
            - warm-go-build-vendor-cache_f697_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-f697c215275094579338c4e4baa92b116c53bd96"}}
            - build-static-assets_fe55_{{checksum ".buildcache/cache-keys/build-static-assets-fe555739fd4a116ccacd6bf8c8514270694f17ca"}}
            - build-ui_7fda_{{checksum ".buildcache/cache-keys/build-ui-7fda199944edb2c45a3cd9c87839a8feaec468d1"}}
            - ui-dependencies_4302_{{checksum ".buildcache/cache-keys/ui-dependencies-43027f1af9fde0305de9a1955f3ef95d28d03366"}}
            - install-yarn_cb2e_{{checksum ".buildcache/cache-keys/install-yarn-cb2ea6830bce7a47f91c1ff70c179af8ca6e6e2c"}}
            - set-workdir_3744_{{checksum ".buildcache/cache-keys/set-workdir-3744f034c08ea1cbbe80904649acc387be86b359"}}
            - install-go-tools_1005_{{checksum ".buildcache/cache-keys/install-go-tools-10057feb9ef291620871eca048285e9bdca5a2d4"}}
            - install-go_e64c_{{checksum ".buildcache/cache-keys/install-go-e64cde0f87f1945366c806507e43aa52a1663fbd"}}
            - base_dd9b_{{checksum ".buildcache/cache-keys/base-dd9bf623c387c085e076d2edb1ea0c66b490e43b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-665d14698579dc9a792c71fb0937b7b20e055e83-{{checksum ".buildcache/cache-keys/package-665d14698579dc9a792c71fb0937b7b20e055e83"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 665d14698579dc9a792c71fb0937b7b20e055e83
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d85a0e79d3e3096edac07edc0634583cbe1ac8e4-{{checksum ".buildcache/cache-keys/package-d85a0e79d3e3096edac07edc0634583cbe1ac8e4"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_494b_{{checksum ".buildcache/cache-keys/copy-source-494bad4b27503c9e23c43c1cefebc9d1b42a40f7"}}
          keys:
            - warm-go-build-vendor-cache_f697_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-f697c215275094579338c4e4baa92b116c53bd96"}}
            - build-static-assets_fe55_{{checksum ".buildcache/cache-keys/build-static-assets-fe555739fd4a116ccacd6bf8c8514270694f17ca"}}
            - build-ui_7fda_{{checksum ".buildcache/cache-keys/build-ui-7fda199944edb2c45a3cd9c87839a8feaec468d1"}}
            - ui-dependencies_4302_{{checksum ".buildcache/cache-keys/ui-dependencies-43027f1af9fde0305de9a1955f3ef95d28d03366"}}
            - install-yarn_cb2e_{{checksum ".buildcache/cache-keys/install-yarn-cb2ea6830bce7a47f91c1ff70c179af8ca6e6e2c"}}
            - set-workdir_3744_{{checksum ".buildcache/cache-keys/set-workdir-3744f034c08ea1cbbe80904649acc387be86b359"}}
            - install-go-tools_1005_{{checksum ".buildcache/cache-keys/install-go-tools-10057feb9ef291620871eca048285e9bdca5a2d4"}}
            - install-go_e64c_{{checksum ".buildcache/cache-keys/install-go-e64cde0f87f1945366c806507e43aa52a1663fbd"}}
            - base_dd9b_{{checksum ".buildcache/cache-keys/base-dd9bf623c387c085e076d2edb1ea0c66b490e43b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d85a0e79d3e3096edac07edc0634583cbe1ac8e4-{{checksum ".buildcache/cache-keys/package-d85a0e79d3e3096edac07edc0634583cbe1ac8e4"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d85a0e79d3e3096edac07edc0634583cbe1ac8e4
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-a308e0bfd1b55d2febfba8dac5019cb6735ec3ac-{{checksum ".buildcache/cache-keys/package-a308e0bfd1b55d2febfba8dac5019cb6735ec3ac"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_494b_{{checksum ".buildcache/cache-keys/copy-source-494bad4b27503c9e23c43c1cefebc9d1b42a40f7"}}
          keys:
            - warm-go-build-vendor-cache_f697_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-f697c215275094579338c4e4baa92b116c53bd96"}}
            - build-static-assets_fe55_{{checksum ".buildcache/cache-keys/build-static-assets-fe555739fd4a116ccacd6bf8c8514270694f17ca"}}
            - build-ui_7fda_{{checksum ".buildcache/cache-keys/build-ui-7fda199944edb2c45a3cd9c87839a8feaec468d1"}}
            - ui-dependencies_4302_{{checksum ".buildcache/cache-keys/ui-dependencies-43027f1af9fde0305de9a1955f3ef95d28d03366"}}
            - install-yarn_cb2e_{{checksum ".buildcache/cache-keys/install-yarn-cb2ea6830bce7a47f91c1ff70c179af8ca6e6e2c"}}
            - set-workdir_3744_{{checksum ".buildcache/cache-keys/set-workdir-3744f034c08ea1cbbe80904649acc387be86b359"}}
            - install-go-tools_1005_{{checksum ".buildcache/cache-keys/install-go-tools-10057feb9ef291620871eca048285e9bdca5a2d4"}}
            - install-go_e64c_{{checksum ".buildcache/cache-keys/install-go-e64cde0f87f1945366c806507e43aa52a1663fbd"}}
            - base_dd9b_{{checksum ".buildcache/cache-keys/base-dd9bf623c387c085e076d2edb1ea0c66b490e43b"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-a308e0bfd1b55d2febfba8dac5019cb6735ec3ac-{{checksum ".buildcache/cache-keys/package-a308e0bfd1b55d2febfba8dac5019cb6735ec3ac"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: a308e0bfd1b55d2febfba8dac5019cb6735ec3ac
workflows:
  build-531021fad7b142cf:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
