version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: build-ui_078d_{{checksum ".buildcache/cache-keys/build-ui-078d61c8867ce7d1e78a1287ac2b8387d2aedadf"}}
          keys:
            - ui-dependencies_f940_{{checksum ".buildcache/cache-keys/ui-dependencies-f9400ec53477a933883d5fa3b79215d9c95e7c5b"}}
            - install-yarn_aabe_{{checksum ".buildcache/cache-keys/install-yarn-aabe3d4293f45b657a3631cd693b5f53883f39e0"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Layer Cache: build-ui'
      - run:
          command: LAYER_SPEC_ID=06-build-ui-078d61c8867ce7d1e78a1287ac2b8387d2aedadf make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-install-go-24041173bb3db182ef43fbc56adf0ed684038a10-image
          name: Build install-go layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589-image
          name: Build install-go-tools layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797-image
          name: Build set-workdir layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 04-install-yarn-aabe3d4293f45b657a3631cd693b5f53883f39e0-image
          name: Build install-yarn layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 05-ui-dependencies-f9400ec53477a933883d5fa3b79215d9c95e7c5b-image
          name: Build ui-dependencies layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-078d61c8867ce7d1e78a1287ac2b8387d2aedadf-image
          name: Build build-ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 06-build-ui-078d61c8867ce7d1e78a1287ac2b8387d2aedadf-save
          name: Build build-ui layer
      - save_cache:
          paths:
            - .buildcache/archives/06-build-ui-078d61c8867ce7d1e78a1287ac2b8387d2aedadf.tar.gz
          key: build-ui_078d_{{checksum ".buildcache/cache-keys/build-ui-078d61c8867ce7d1e78a1287ac2b8387d2aedadf"}}
          name: 'Save Layer Cache: build-ui'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-d15b1f64ef8bf08fa03d12f8a48a8a156b73695d-{{checksum ".buildcache/cache-keys/package-d15b1f64ef8bf08fa03d12f8a48a8a156b73695d"}}
          name: Restore package cache
      - restore_cache:
          key: package-b76b26b536dae23b8a0ad40286ad0e8d7910038a-{{checksum ".buildcache/cache-keys/package-b76b26b536dae23b8a0ad40286ad0e8d7910038a"}}
          name: Restore package cache
      - restore_cache:
          key: package-f057cc371c9b69c1e0a4dd0cd242cf9f8ba3a7ab-{{checksum ".buildcache/cache-keys/package-f057cc371c9b69c1e0a4dd0cd242cf9f8ba3a7ab"}}
          name: Restore package cache
      - restore_cache:
          key: package-e4951bb056c2a0ff702d2ca99dc0d4a77ba880f2-{{checksum ".buildcache/cache-keys/package-e4951bb056c2a0ff702d2ca99dc0d4a77ba880f2"}}
          name: Restore package cache
      - restore_cache:
          key: package-37507bbfac5fd7d309814bd12feb4947ca5577c2-{{checksum ".buildcache/cache-keys/package-37507bbfac5fd7d309814bd12feb4947ca5577c2"}}
          name: Restore package cache
      - restore_cache:
          key: package-4e422e9a32a40fd201cfd10c16c1a4f40b777216-{{checksum ".buildcache/cache-keys/package-4e422e9a32a40fd201cfd10c16c1a4f40b777216"}}
          name: Restore package cache
      - restore_cache:
          key: package-d7ef32392ecbcc05cb14d2725676734d0d42cb84-{{checksum ".buildcache/cache-keys/package-d7ef32392ecbcc05cb14d2725676734d0d42cb84"}}
          name: Restore package cache
      - restore_cache:
          key: package-251bffdbdf0fb937fb9691e9b955d8a4d99eb3b1-{{checksum ".buildcache/cache-keys/package-251bffdbdf0fb937fb9691e9b955d8a4d99eb3b1"}}
          name: Restore package cache
      - restore_cache:
          key: package-e4faa43473c4a6aae8088983527ea2befd7cde44-{{checksum ".buildcache/cache-keys/package-e4faa43473c4a6aae8088983527ea2befd7cde44"}}
          name: Restore package cache
      - restore_cache:
          key: package-2c943aeeb15f521f9b5a05b240ac9b03630ebb60-{{checksum ".buildcache/cache-keys/package-2c943aeeb15f521f9b5a05b240ac9b03630ebb60"}}
          name: Restore package cache
      - restore_cache:
          key: package-c681ff674b9a644fe72b21d5d7bb4e1a27c6b459-{{checksum ".buildcache/cache-keys/package-c681ff674b9a644fe72b21d5d7bb4e1a27c6b459"}}
          name: Restore package cache
      - restore_cache:
          key: package-716591c285c54bcf50c307583df9c59845b5a56e-{{checksum ".buildcache/cache-keys/package-716591c285c54bcf50c307583df9c59845b5a56e"}}
          name: Restore package cache
      - restore_cache:
          key: package-771430e60c52d17b9c0a96a118b8e2a624c5f3b4-{{checksum ".buildcache/cache-keys/package-771430e60c52d17b9c0a96a118b8e2a624c5f3b4"}}
          name: Restore package cache
      - restore_cache:
          key: package-7001a998a381378405ca766a97c3edeccff36185-{{checksum ".buildcache/cache-keys/package-7001a998a381378405ca766a97c3edeccff36185"}}
          name: Restore package cache
      - restore_cache:
          key: package-adcb339d9b63d473883b4e2d624826793b7ca55e-{{checksum ".buildcache/cache-keys/package-adcb339d9b63d473883b4e2d624826793b7ca55e"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-686ba3381e6d9ce2.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-686ba3381e6d9ce2.tar.gz .buildcache/packages lockfile-686ba3381e6d9ce2.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-686ba3381e6d9ce2.tar.gz .buildcache/packages/store/*.json lockfile-686ba3381e6d9ce2.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-686ba3381e6d9ce2.yml
      - store_artifacts:
          path: packages-686ba3381e6d9ce2.tar.gz
      - store_artifacts:
          path: meta-686ba3381e6d9ce2.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d15b1f64ef8bf08fa03d12f8a48a8a156b73695d-{{checksum ".buildcache/cache-keys/package-d15b1f64ef8bf08fa03d12f8a48a8a156b73695d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_bc66_{{checksum ".buildcache/cache-keys/copy-source-bc66e162673752d72e832a87a1100e4f7a6ea492"}}
          keys:
            - warm-go-build-vendor-cache_1c50_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1c503baebfb4f91aa146aaf20cbfd3a424d9468b"}}
            - build-static-assets_cb34_{{checksum ".buildcache/cache-keys/build-static-assets-cb34b95ff31848d2f4e1ed84906a89e15681327c"}}
            - build-ui_078d_{{checksum ".buildcache/cache-keys/build-ui-078d61c8867ce7d1e78a1287ac2b8387d2aedadf"}}
            - ui-dependencies_f940_{{checksum ".buildcache/cache-keys/ui-dependencies-f9400ec53477a933883d5fa3b79215d9c95e7c5b"}}
            - install-yarn_aabe_{{checksum ".buildcache/cache-keys/install-yarn-aabe3d4293f45b657a3631cd693b5f53883f39e0"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d15b1f64ef8bf08fa03d12f8a48a8a156b73695d-{{checksum ".buildcache/cache-keys/package-d15b1f64ef8bf08fa03d12f8a48a8a156b73695d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d15b1f64ef8bf08fa03d12f8a48a8a156b73695d
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b76b26b536dae23b8a0ad40286ad0e8d7910038a-{{checksum ".buildcache/cache-keys/package-b76b26b536dae23b8a0ad40286ad0e8d7910038a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_bc66_{{checksum ".buildcache/cache-keys/copy-source-bc66e162673752d72e832a87a1100e4f7a6ea492"}}
          keys:
            - warm-go-build-vendor-cache_1c50_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1c503baebfb4f91aa146aaf20cbfd3a424d9468b"}}
            - build-static-assets_cb34_{{checksum ".buildcache/cache-keys/build-static-assets-cb34b95ff31848d2f4e1ed84906a89e15681327c"}}
            - build-ui_078d_{{checksum ".buildcache/cache-keys/build-ui-078d61c8867ce7d1e78a1287ac2b8387d2aedadf"}}
            - ui-dependencies_f940_{{checksum ".buildcache/cache-keys/ui-dependencies-f9400ec53477a933883d5fa3b79215d9c95e7c5b"}}
            - install-yarn_aabe_{{checksum ".buildcache/cache-keys/install-yarn-aabe3d4293f45b657a3631cd693b5f53883f39e0"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b76b26b536dae23b8a0ad40286ad0e8d7910038a-{{checksum ".buildcache/cache-keys/package-b76b26b536dae23b8a0ad40286ad0e8d7910038a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b76b26b536dae23b8a0ad40286ad0e8d7910038a
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-f057cc371c9b69c1e0a4dd0cd242cf9f8ba3a7ab-{{checksum ".buildcache/cache-keys/package-f057cc371c9b69c1e0a4dd0cd242cf9f8ba3a7ab"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_bc66_{{checksum ".buildcache/cache-keys/copy-source-bc66e162673752d72e832a87a1100e4f7a6ea492"}}
          keys:
            - warm-go-build-vendor-cache_1c50_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1c503baebfb4f91aa146aaf20cbfd3a424d9468b"}}
            - build-static-assets_cb34_{{checksum ".buildcache/cache-keys/build-static-assets-cb34b95ff31848d2f4e1ed84906a89e15681327c"}}
            - build-ui_078d_{{checksum ".buildcache/cache-keys/build-ui-078d61c8867ce7d1e78a1287ac2b8387d2aedadf"}}
            - ui-dependencies_f940_{{checksum ".buildcache/cache-keys/ui-dependencies-f9400ec53477a933883d5fa3b79215d9c95e7c5b"}}
            - install-yarn_aabe_{{checksum ".buildcache/cache-keys/install-yarn-aabe3d4293f45b657a3631cd693b5f53883f39e0"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-f057cc371c9b69c1e0a4dd0cd242cf9f8ba3a7ab-{{checksum ".buildcache/cache-keys/package-f057cc371c9b69c1e0a4dd0cd242cf9f8ba3a7ab"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: f057cc371c9b69c1e0a4dd0cd242cf9f8ba3a7ab
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e4951bb056c2a0ff702d2ca99dc0d4a77ba880f2-{{checksum ".buildcache/cache-keys/package-e4951bb056c2a0ff702d2ca99dc0d4a77ba880f2"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_bc66_{{checksum ".buildcache/cache-keys/copy-source-bc66e162673752d72e832a87a1100e4f7a6ea492"}}
          keys:
            - warm-go-build-vendor-cache_1c50_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1c503baebfb4f91aa146aaf20cbfd3a424d9468b"}}
            - build-static-assets_cb34_{{checksum ".buildcache/cache-keys/build-static-assets-cb34b95ff31848d2f4e1ed84906a89e15681327c"}}
            - build-ui_078d_{{checksum ".buildcache/cache-keys/build-ui-078d61c8867ce7d1e78a1287ac2b8387d2aedadf"}}
            - ui-dependencies_f940_{{checksum ".buildcache/cache-keys/ui-dependencies-f9400ec53477a933883d5fa3b79215d9c95e7c5b"}}
            - install-yarn_aabe_{{checksum ".buildcache/cache-keys/install-yarn-aabe3d4293f45b657a3631cd693b5f53883f39e0"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e4951bb056c2a0ff702d2ca99dc0d4a77ba880f2-{{checksum ".buildcache/cache-keys/package-e4951bb056c2a0ff702d2ca99dc0d4a77ba880f2"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e4951bb056c2a0ff702d2ca99dc0d4a77ba880f2
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-37507bbfac5fd7d309814bd12feb4947ca5577c2-{{checksum ".buildcache/cache-keys/package-37507bbfac5fd7d309814bd12feb4947ca5577c2"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_bc66_{{checksum ".buildcache/cache-keys/copy-source-bc66e162673752d72e832a87a1100e4f7a6ea492"}}
          keys:
            - warm-go-build-vendor-cache_1c50_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1c503baebfb4f91aa146aaf20cbfd3a424d9468b"}}
            - build-static-assets_cb34_{{checksum ".buildcache/cache-keys/build-static-assets-cb34b95ff31848d2f4e1ed84906a89e15681327c"}}
            - build-ui_078d_{{checksum ".buildcache/cache-keys/build-ui-078d61c8867ce7d1e78a1287ac2b8387d2aedadf"}}
            - ui-dependencies_f940_{{checksum ".buildcache/cache-keys/ui-dependencies-f9400ec53477a933883d5fa3b79215d9c95e7c5b"}}
            - install-yarn_aabe_{{checksum ".buildcache/cache-keys/install-yarn-aabe3d4293f45b657a3631cd693b5f53883f39e0"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-37507bbfac5fd7d309814bd12feb4947ca5577c2-{{checksum ".buildcache/cache-keys/package-37507bbfac5fd7d309814bd12feb4947ca5577c2"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 37507bbfac5fd7d309814bd12feb4947ca5577c2
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-4e422e9a32a40fd201cfd10c16c1a4f40b777216-{{checksum ".buildcache/cache-keys/package-4e422e9a32a40fd201cfd10c16c1a4f40b777216"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_bc66_{{checksum ".buildcache/cache-keys/copy-source-bc66e162673752d72e832a87a1100e4f7a6ea492"}}
          keys:
            - warm-go-build-vendor-cache_1c50_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1c503baebfb4f91aa146aaf20cbfd3a424d9468b"}}
            - build-static-assets_cb34_{{checksum ".buildcache/cache-keys/build-static-assets-cb34b95ff31848d2f4e1ed84906a89e15681327c"}}
            - build-ui_078d_{{checksum ".buildcache/cache-keys/build-ui-078d61c8867ce7d1e78a1287ac2b8387d2aedadf"}}
            - ui-dependencies_f940_{{checksum ".buildcache/cache-keys/ui-dependencies-f9400ec53477a933883d5fa3b79215d9c95e7c5b"}}
            - install-yarn_aabe_{{checksum ".buildcache/cache-keys/install-yarn-aabe3d4293f45b657a3631cd693b5f53883f39e0"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-4e422e9a32a40fd201cfd10c16c1a4f40b777216-{{checksum ".buildcache/cache-keys/package-4e422e9a32a40fd201cfd10c16c1a4f40b777216"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 4e422e9a32a40fd201cfd10c16c1a4f40b777216
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d7ef32392ecbcc05cb14d2725676734d0d42cb84-{{checksum ".buildcache/cache-keys/package-d7ef32392ecbcc05cb14d2725676734d0d42cb84"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_bc66_{{checksum ".buildcache/cache-keys/copy-source-bc66e162673752d72e832a87a1100e4f7a6ea492"}}
          keys:
            - warm-go-build-vendor-cache_1c50_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1c503baebfb4f91aa146aaf20cbfd3a424d9468b"}}
            - build-static-assets_cb34_{{checksum ".buildcache/cache-keys/build-static-assets-cb34b95ff31848d2f4e1ed84906a89e15681327c"}}
            - build-ui_078d_{{checksum ".buildcache/cache-keys/build-ui-078d61c8867ce7d1e78a1287ac2b8387d2aedadf"}}
            - ui-dependencies_f940_{{checksum ".buildcache/cache-keys/ui-dependencies-f9400ec53477a933883d5fa3b79215d9c95e7c5b"}}
            - install-yarn_aabe_{{checksum ".buildcache/cache-keys/install-yarn-aabe3d4293f45b657a3631cd693b5f53883f39e0"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d7ef32392ecbcc05cb14d2725676734d0d42cb84-{{checksum ".buildcache/cache-keys/package-d7ef32392ecbcc05cb14d2725676734d0d42cb84"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d7ef32392ecbcc05cb14d2725676734d0d42cb84
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-251bffdbdf0fb937fb9691e9b955d8a4d99eb3b1-{{checksum ".buildcache/cache-keys/package-251bffdbdf0fb937fb9691e9b955d8a4d99eb3b1"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_bc66_{{checksum ".buildcache/cache-keys/copy-source-bc66e162673752d72e832a87a1100e4f7a6ea492"}}
          keys:
            - warm-go-build-vendor-cache_1c50_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1c503baebfb4f91aa146aaf20cbfd3a424d9468b"}}
            - build-static-assets_cb34_{{checksum ".buildcache/cache-keys/build-static-assets-cb34b95ff31848d2f4e1ed84906a89e15681327c"}}
            - build-ui_078d_{{checksum ".buildcache/cache-keys/build-ui-078d61c8867ce7d1e78a1287ac2b8387d2aedadf"}}
            - ui-dependencies_f940_{{checksum ".buildcache/cache-keys/ui-dependencies-f9400ec53477a933883d5fa3b79215d9c95e7c5b"}}
            - install-yarn_aabe_{{checksum ".buildcache/cache-keys/install-yarn-aabe3d4293f45b657a3631cd693b5f53883f39e0"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-251bffdbdf0fb937fb9691e9b955d8a4d99eb3b1-{{checksum ".buildcache/cache-keys/package-251bffdbdf0fb937fb9691e9b955d8a4d99eb3b1"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 251bffdbdf0fb937fb9691e9b955d8a4d99eb3b1
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e4faa43473c4a6aae8088983527ea2befd7cde44-{{checksum ".buildcache/cache-keys/package-e4faa43473c4a6aae8088983527ea2befd7cde44"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_bc66_{{checksum ".buildcache/cache-keys/copy-source-bc66e162673752d72e832a87a1100e4f7a6ea492"}}
          keys:
            - warm-go-build-vendor-cache_1c50_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1c503baebfb4f91aa146aaf20cbfd3a424d9468b"}}
            - build-static-assets_cb34_{{checksum ".buildcache/cache-keys/build-static-assets-cb34b95ff31848d2f4e1ed84906a89e15681327c"}}
            - build-ui_078d_{{checksum ".buildcache/cache-keys/build-ui-078d61c8867ce7d1e78a1287ac2b8387d2aedadf"}}
            - ui-dependencies_f940_{{checksum ".buildcache/cache-keys/ui-dependencies-f9400ec53477a933883d5fa3b79215d9c95e7c5b"}}
            - install-yarn_aabe_{{checksum ".buildcache/cache-keys/install-yarn-aabe3d4293f45b657a3631cd693b5f53883f39e0"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e4faa43473c4a6aae8088983527ea2befd7cde44-{{checksum ".buildcache/cache-keys/package-e4faa43473c4a6aae8088983527ea2befd7cde44"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e4faa43473c4a6aae8088983527ea2befd7cde44
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2c943aeeb15f521f9b5a05b240ac9b03630ebb60-{{checksum ".buildcache/cache-keys/package-2c943aeeb15f521f9b5a05b240ac9b03630ebb60"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_bc66_{{checksum ".buildcache/cache-keys/copy-source-bc66e162673752d72e832a87a1100e4f7a6ea492"}}
          keys:
            - warm-go-build-vendor-cache_1c50_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1c503baebfb4f91aa146aaf20cbfd3a424d9468b"}}
            - build-static-assets_cb34_{{checksum ".buildcache/cache-keys/build-static-assets-cb34b95ff31848d2f4e1ed84906a89e15681327c"}}
            - build-ui_078d_{{checksum ".buildcache/cache-keys/build-ui-078d61c8867ce7d1e78a1287ac2b8387d2aedadf"}}
            - ui-dependencies_f940_{{checksum ".buildcache/cache-keys/ui-dependencies-f9400ec53477a933883d5fa3b79215d9c95e7c5b"}}
            - install-yarn_aabe_{{checksum ".buildcache/cache-keys/install-yarn-aabe3d4293f45b657a3631cd693b5f53883f39e0"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2c943aeeb15f521f9b5a05b240ac9b03630ebb60-{{checksum ".buildcache/cache-keys/package-2c943aeeb15f521f9b5a05b240ac9b03630ebb60"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2c943aeeb15f521f9b5a05b240ac9b03630ebb60
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-c681ff674b9a644fe72b21d5d7bb4e1a27c6b459-{{checksum ".buildcache/cache-keys/package-c681ff674b9a644fe72b21d5d7bb4e1a27c6b459"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_bc66_{{checksum ".buildcache/cache-keys/copy-source-bc66e162673752d72e832a87a1100e4f7a6ea492"}}
          keys:
            - warm-go-build-vendor-cache_1c50_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1c503baebfb4f91aa146aaf20cbfd3a424d9468b"}}
            - build-static-assets_cb34_{{checksum ".buildcache/cache-keys/build-static-assets-cb34b95ff31848d2f4e1ed84906a89e15681327c"}}
            - build-ui_078d_{{checksum ".buildcache/cache-keys/build-ui-078d61c8867ce7d1e78a1287ac2b8387d2aedadf"}}
            - ui-dependencies_f940_{{checksum ".buildcache/cache-keys/ui-dependencies-f9400ec53477a933883d5fa3b79215d9c95e7c5b"}}
            - install-yarn_aabe_{{checksum ".buildcache/cache-keys/install-yarn-aabe3d4293f45b657a3631cd693b5f53883f39e0"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-c681ff674b9a644fe72b21d5d7bb4e1a27c6b459-{{checksum ".buildcache/cache-keys/package-c681ff674b9a644fe72b21d5d7bb4e1a27c6b459"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: c681ff674b9a644fe72b21d5d7bb4e1a27c6b459
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-716591c285c54bcf50c307583df9c59845b5a56e-{{checksum ".buildcache/cache-keys/package-716591c285c54bcf50c307583df9c59845b5a56e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_bc66_{{checksum ".buildcache/cache-keys/copy-source-bc66e162673752d72e832a87a1100e4f7a6ea492"}}
          keys:
            - warm-go-build-vendor-cache_1c50_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1c503baebfb4f91aa146aaf20cbfd3a424d9468b"}}
            - build-static-assets_cb34_{{checksum ".buildcache/cache-keys/build-static-assets-cb34b95ff31848d2f4e1ed84906a89e15681327c"}}
            - build-ui_078d_{{checksum ".buildcache/cache-keys/build-ui-078d61c8867ce7d1e78a1287ac2b8387d2aedadf"}}
            - ui-dependencies_f940_{{checksum ".buildcache/cache-keys/ui-dependencies-f9400ec53477a933883d5fa3b79215d9c95e7c5b"}}
            - install-yarn_aabe_{{checksum ".buildcache/cache-keys/install-yarn-aabe3d4293f45b657a3631cd693b5f53883f39e0"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-716591c285c54bcf50c307583df9c59845b5a56e-{{checksum ".buildcache/cache-keys/package-716591c285c54bcf50c307583df9c59845b5a56e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 716591c285c54bcf50c307583df9c59845b5a56e
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-771430e60c52d17b9c0a96a118b8e2a624c5f3b4-{{checksum ".buildcache/cache-keys/package-771430e60c52d17b9c0a96a118b8e2a624c5f3b4"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_bc66_{{checksum ".buildcache/cache-keys/copy-source-bc66e162673752d72e832a87a1100e4f7a6ea492"}}
          keys:
            - warm-go-build-vendor-cache_1c50_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1c503baebfb4f91aa146aaf20cbfd3a424d9468b"}}
            - build-static-assets_cb34_{{checksum ".buildcache/cache-keys/build-static-assets-cb34b95ff31848d2f4e1ed84906a89e15681327c"}}
            - build-ui_078d_{{checksum ".buildcache/cache-keys/build-ui-078d61c8867ce7d1e78a1287ac2b8387d2aedadf"}}
            - ui-dependencies_f940_{{checksum ".buildcache/cache-keys/ui-dependencies-f9400ec53477a933883d5fa3b79215d9c95e7c5b"}}
            - install-yarn_aabe_{{checksum ".buildcache/cache-keys/install-yarn-aabe3d4293f45b657a3631cd693b5f53883f39e0"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-771430e60c52d17b9c0a96a118b8e2a624c5f3b4-{{checksum ".buildcache/cache-keys/package-771430e60c52d17b9c0a96a118b8e2a624c5f3b4"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 771430e60c52d17b9c0a96a118b8e2a624c5f3b4
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-7001a998a381378405ca766a97c3edeccff36185-{{checksum ".buildcache/cache-keys/package-7001a998a381378405ca766a97c3edeccff36185"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_bc66_{{checksum ".buildcache/cache-keys/copy-source-bc66e162673752d72e832a87a1100e4f7a6ea492"}}
          keys:
            - warm-go-build-vendor-cache_1c50_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1c503baebfb4f91aa146aaf20cbfd3a424d9468b"}}
            - build-static-assets_cb34_{{checksum ".buildcache/cache-keys/build-static-assets-cb34b95ff31848d2f4e1ed84906a89e15681327c"}}
            - build-ui_078d_{{checksum ".buildcache/cache-keys/build-ui-078d61c8867ce7d1e78a1287ac2b8387d2aedadf"}}
            - ui-dependencies_f940_{{checksum ".buildcache/cache-keys/ui-dependencies-f9400ec53477a933883d5fa3b79215d9c95e7c5b"}}
            - install-yarn_aabe_{{checksum ".buildcache/cache-keys/install-yarn-aabe3d4293f45b657a3631cd693b5f53883f39e0"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-7001a998a381378405ca766a97c3edeccff36185-{{checksum ".buildcache/cache-keys/package-7001a998a381378405ca766a97c3edeccff36185"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 7001a998a381378405ca766a97c3edeccff36185
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-adcb339d9b63d473883b4e2d624826793b7ca55e-{{checksum ".buildcache/cache-keys/package-adcb339d9b63d473883b4e2d624826793b7ca55e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_bc66_{{checksum ".buildcache/cache-keys/copy-source-bc66e162673752d72e832a87a1100e4f7a6ea492"}}
          keys:
            - warm-go-build-vendor-cache_1c50_{{checksum ".buildcache/cache-keys/warm-go-build-vendor-cache-1c503baebfb4f91aa146aaf20cbfd3a424d9468b"}}
            - build-static-assets_cb34_{{checksum ".buildcache/cache-keys/build-static-assets-cb34b95ff31848d2f4e1ed84906a89e15681327c"}}
            - build-ui_078d_{{checksum ".buildcache/cache-keys/build-ui-078d61c8867ce7d1e78a1287ac2b8387d2aedadf"}}
            - ui-dependencies_f940_{{checksum ".buildcache/cache-keys/ui-dependencies-f9400ec53477a933883d5fa3b79215d9c95e7c5b"}}
            - install-yarn_aabe_{{checksum ".buildcache/cache-keys/install-yarn-aabe3d4293f45b657a3631cd693b5f53883f39e0"}}
            - set-workdir_ac09_{{checksum ".buildcache/cache-keys/set-workdir-ac09aa713547484fe6e0b8853bec229bfc009797"}}
            - install-go-tools_af77_{{checksum ".buildcache/cache-keys/install-go-tools-af775ebfc4b4694d16eb189a289019ca91afa589"}}
            - install-go_2404_{{checksum ".buildcache/cache-keys/install-go-24041173bb3db182ef43fbc56adf0ed684038a10"}}
            - base_fc1f_{{checksum ".buildcache/cache-keys/base-fc1fa0c0d0643b393dfc77cbd78580b60fc4366f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_0e0377f4e2c356c2536a03e131912f06"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-adcb339d9b63d473883b4e2d624826793b7ca55e-{{checksum ".buildcache/cache-keys/package-adcb339d9b63d473883b4e2d624826793b7ca55e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: adcb339d9b63d473883b4e2d624826793b7ca55e
workflows:
  build-686ba3381e6d9ce2:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
